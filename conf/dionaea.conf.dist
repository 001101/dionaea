logging = {
	// file not starting with / is taken relative to LOCALESTATEDIR (e.g. /opt/dionaea/var)
	file = "log/dionaea.log"
	levels = "all"
	domains = "*"
}

processors = 
{ 
	emu = 
	{
		config = {
			emulation = {
				limits = {
					files = "3"
					filesize = "524288" // 512 * 1024
					sockets = "3"
					sustain = "120"
					idle = "30"
					cpu = "120"
					steps = "1073741824" // 1024 * 1024 * 1024
				}

				/**
				 * api default arguments for development 
				 * disabled by default
				 * not working yet 
				 */
				api = {
					connect = {
						host = "127.0.0.1"
						port = "4444"
					}
				}
			}
		}
	}
}

downloads =
{
	dir = "var/dionaea/binaries"
	tmp-suffix = ".tmp"
}

bistreams =
{
	python = 
	{
		dir = "var/dionaea/bistreams"
	}
}

submit = 
{
	urls = ["http://onlineanalyzer.norman.com/nepenthes_upload.php",
			"http://luigi.informatik.uni-mannheim.de/submit.php?action=verify"]
	email = "nepenthesdev@gmail.com"
}

listen = 
{
	/* basically we have 3 modes
	   - getifaddrs - auto
	     will get a list of all ips and bind a service to each ip
	   - manual - your decision
	     addrs has to be provided, and should look like this
		 addrs = { eth0 = ["1.1.1.1", "1.1.1.2"], eth1 = ["2.1.1.1", "2.1.1.2"] }
		 you get the idea ...
		 for most cases with more than one address
		 addrs = { eth0 = ["0.0.0.0"] }
		 will do the trick
		 if you want to throw in ipv6 support as well ...
		 addrs = { eth0 = ["::"] }
		 note: ipv6 does not work with surfids yet, 
		 as ipv6 addresses are mapped to ipv4 and surfids fails to retrieve the sensor id for ::ffff:1.2.3.4
	*/
	     
	mode = "getifaddrs"
	addrs = { eth0 = ["::"] }
}

modules = {

	curl = 
	{
		protocol = "http"
	}

	emu = {
		detect = "1"
		profile = "1"
	}

	python = {
		// default expands to PREFIX/lib/dionaea/python/
		// ordering is granted
		// useful for development
		// simply add your devel directory to the list, avoids a make install for new python code
		sys_path = ["default"]

		// python imports
		imports	= [	"log",
					"services",
					"ihandlers"]
		ftp = {
			root = "var/dionaea/wwwroot"
		}
		tftp = {
			root = "var/dionaea/wwwroot"
		}
		http = {
			root = "var/dionaea/wwwroot"
		}
		surfids = {
			sslmode = "require"
			host = "surfids.example.com" // change this
			port = "5432"                // maybe this
			username = "surfids"         // this
			password = "secret"          // and this
			dbname = "idsserver"
		}
		logsql = {
			mode = "sqlite" // so far there is only sqlite
			sqlite = {
				file = "var/dionaea/logsql.sqlite"
			}
		}

		ihandlers = {
			handlers = ["ftpdownload", "tftpdownload", "emuprofile", "cmdshell", "store", "uniquedownload", 
			"logsql",
//			"p0f",
//			"surfids"
			]
		}

		services = {
			serve = ["http", "https", "tftp", "ftp", "mirror", "smb", "epmap"]
		}

	}

	/* nc is a test module */
/*	nc = 
	{
		services = [
			{
				proto = "redir"
				type = "tcp"
				host = "::"
				port = "4711"
			},
			{
				proto = "redir"
				type = "tcp"
				host = "::"
				port = "12344"
			},
			{
				proto = "sink"
				type = "tcp"
				host = "::"
				port = "12345"
				throttle = {
					in = "8192"
				}
				timeout = {
					listen = "15"
					connect = "15"
				}
			},
			{
				proto = "source"
				type = "tcp"
				host = "::"
				port = "12346"
				throttle = {
					out = "8192"
				}
				timeout = {
					listen = "15"
					connect = "15"
				}
			},
			{
				proto = "redir"
				type = "tcp"
				host = "::"
				port = "12347"
				throttle = {
					in = "8192"
					out = "8192"
				}
				timeout = {
					listen = "15"
					connect = "15"
				}
			},			
			{
				proto = "redir"
				type = "tls"
				host = "::"
				port = "12444"
				timeout = {
					listen = "15"
					connect = "15"
				}
			},

			{
				proto = "sink"
				type = "tls"
				host = "::"
				port = "12445"
				throttle = {
					in = "8192"
				}
				timeout = {
					listen = "15"
					connect = "5"
				}
			},
			{
				proto = "source"
				type = "tls"
				host = "::"
				port = "12446"
				throttle = {
					out = "8192"
				}
				timeout = {
					listen = "15"
					connect = "15"
				}
			},
			{
				proto = "redir"
				type = "tls"
				host = "::"
				port = "12447"
				throttle = {
					in = "8192"
					out = "8192"
				}
				timeout = {
					listen = "15"
					connect = "15"
				}
			},
			{
				proto = "source"
				type = "udp"
				host = "::"
				port = "12544"
				timeout = {
					connect = "15"
				}
			},
			{
				proto = "sink"
				type = "udp"
				host = "::"
				port = "12545"
				timeout = {
					connect = "15"
				}
			},
			{
				proto = "redir"
				type = "udp"
				host = "::"
				port = "12546"
				timeout = {
					connect = "15"
				}
			}
		]

		clients = [
			{
				proto = "source"
				type = "tcp"
				host = "127.0.0.1"
				port = "13344"
				timeout = {
					connecting = "5"
					connect = "15"
					reconnect = "5"
				}
			},
			{
				proto = "redir"
				type = "tcp"
				host = "ip6-localhost"
				port = "13345"
				timeout = {
					connecting = "5"
					connect = "15"
					reconnect = "5"
				}
			},
			{
				proto = "redir"
				type = "tls"
				host = "localhost"
				port = "13346"
				timeout = {
					connecting = "5"
					connect = "15"
					reconnect = "5"
				}
			}, 
			{
				proto = "source"
				type = "tls"
				host = "ip6-localhost"
				port = "12445"
				timeout = {
					reconnect = "1"
					connect = "1"
				}

			}
		]

	}
 */
}


